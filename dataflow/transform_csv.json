{
	"name": "transform_csv",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_dataflow_source",
						"type": "DatasetReference"
					},
					"name": "sourcecsv"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_data_flow_sink",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filtercsv"
				},
				{
					"name": "splitcsv"
				},
				{
					"name": "alterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          OrderID as integer,",
				"          Customer as string,",
				"          Item as string,",
				"          Quantity as integer,",
				"          Price as integer,",
				"          OrderDate as date",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcecsv",
				"sourcecsv select(mapColumn(",
				"          OrderID,",
				"          Item,",
				"          Quantity,",
				"          Price,",
				"          OrderDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(Quantity==3) ~> filtercsv",
				"filtercsv split(Item=='Monitor',",
				"     disjoint: false) ~> splitcsv@(Monitor, otherthanMonitor)",
				"splitcsv@otherthanMonitor alterRow(insertIf(Quantity==3)) ~> alterRow1",
				"alterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          OrderID as string,",
				"          Customer as string,",
				"          Item as string,",
				"          Quantity as string,",
				"          Price as string,",
				"          OrderDate as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}